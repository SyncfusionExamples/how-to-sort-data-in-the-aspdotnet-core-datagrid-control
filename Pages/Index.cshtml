@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
    var order = OrderDetails.GetAllRecords();
    var customSort = "sortComparer";
    //List<object> sortColumns = new List<object>();
    //sortColumns.Add(new { field = "OrderDate", direction = "Ascending" });
    //sortColumns.Add(new { field = "Freight", direction = "Descending" });
}

<ejs-grid id="Grid" dataSource="@order" allowSorting=true
          allowMultiSorting="true">
    @*<e-grid-sortsettings columns="sortColumns"></e-grid-sortsettings>*@
    <e-grid-columns>
        <e-grid-column field="OrderID"
                       headerText="Order ID"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="CustomerID"
                       headerText="Customer Name"
                       width="150"></e-grid-column>
        <e-grid-column field="OrderDate"
                       headerText=" Order Date"
                       format="yMd"
                       width="130"></e-grid-column>
        <e-grid-column field="Freight"
                       headerText="Freight"
                       format="C2"
                       width="120"></e-grid-column>
        <e-grid-column field="ShipCity"
                       headerText="Ship City"
                       width="150"></e-grid-column>
        <e-grid-column field="Status"
                       headerText="Status"
                       width="150"
                       sortComparer="customSort"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script>
    function mapStatus(status){
        switch(status){
            case "Order Received":
                return 1;
            case "Shipped":
                return 2;
            case "Out for Delivery":
                return 3;
            default:
                return 4;
        }
    }

    function sortComparer(reference, comparer){
        var xStatus = mapStatus(reference);
        var yStatus = mapStatus(comparer);
        if (xStatus < yStatus) {
            return -1; 
        } else if (xStatus > yStatus) {
            return 1; 
        } else {
            return 0;
        }
    }
</script>



